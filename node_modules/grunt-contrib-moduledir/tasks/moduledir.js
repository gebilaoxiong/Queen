/**
 *
 * @authors 熊洋 (xywindows@gmail.com)
 * @date    2014-03-29 14:20:16
 * @description 生成用require加载的模块目录文件
 */
module.exports = function(grunt) {
	var lib = require('./lib/moduledir.js').init(grunt);

	grunt.registerMultiTask('moduledir', 'merge module dir fiele', function() {
		var options = this.options({
				postfix: '.js',
				path: {}
			}),

			rsprit = /\//g,

			underling = '_',

			dot = '.';

		this.files.forEach(function(file) {

			var filePathArray, module = {};


			/*遍历压缩路径下的所有文件  截去根目录名和文件后缀名 添加到数组中*/
			filePathArray = file.src.map(function(filepath) {
				var path = filepath.substring(options.rootDir.length + 1, filepath.length - 3);

				//是否拷贝源文件
				if (options.copySource) {

					//grunt.log.writeln("copyTo：" + file.dest + '/' + options.moduleName + '/' + path)
					grunt.file.copy(filepath, file.dest + '/' + options.moduleName + '/' + path + '.js');
				}


				return path;
			});

			/*生成返回模块JSON*/
			filePathArray.forEach(function(path) {

				namespace = path.replace(rsprit, dot)

				if (namespace.indexOf('.') !== -1) { //非根目录
					//生成命名空间
					lib.ns(module, namespace.substring(0, namespace.lastIndexOf('.') + 1))[namespace.substr(namespace.lastIndexOf('.') + 1)] = path.replace(rsprit, underling);

				} else {
					module[namespace] = path.replace(rsprit, underling);
				}
			});


			/*编译成函数 写入文件*/
			grunt.file.write(
				file.dest + '/' + options.moduleName + options.postfix,
				grunt.template.process([
					"define([<%=requirePaths%>],function(<%=variables%>){",
					"return <%=JSON.stringify(module).replace(/\"|\'/g,'')%>;",
					"});"
				].join(''), {
					data: {
						/*请求路径*/
						requirePaths: filePathArray
							.map(lib.requirePathBuilder(options.paths))
							.join(','),

						/*变量名称*/
						variables: filePathArray.map(function(path) {
							return path.replace(rsprit, underling);
						}).join(','),

						/*返回模块*/
						module: module[options.moduleName]
					}
				}), {
					defaultEncoding: 'utf8'
				});

			grunt.log.write('合并完成。。');
		});



	})

}